<script>
    var playlist =
        [{
            title:"Happy",
            mp3:"https://s3.amazonaws.com/emotionsproject/happy+songs/Happy.mp3",
        },
        {
            title:"The Man",
            mp3:"https://s3.amazonaws.com/emotionsproject/happy+songs/The+Man.mp3",
        }];
        
    var myPlayer = $("#jquery_jplayer_1");
    var 
    jpAncestor = "#jp_container_1",
    myPlayerData,
    fixFlash_mp4, // Flag: The m4a and m4v Flash player gives some old currentTime values when changed.
    fixFlash_mp4_id, // Timeout ID used with fixFlash_mp4
    ignore_timeupdate, // Flag used with fixFlash_mp4
    myControl;

    // Instantiate the jPlayer playlist object, using the Soundcloud playlist array   
    new jPlayerPlaylist({
        jPlayer: myPlayer,
        cssSelectorAncestor: jpAncestor
    }, 
    playlist
    ,
    {
        playlistOptions: {
            autoPlay: false,
            loopOnPrevious: true // For restarting the playlist after the last track
        },
        ready: function (event) {
            // Hide the volume slider on mobile browsers. ie., They have no effect.
            if (event.jPlayer.status.noVolume) {
                // Add a class and then CSS rules deal with it.
                $(".jp-gui").addClass("jp-no-volume");
            }
            // Determine if Flash is being used and the mp4 media type is supplied. BTW, Supplying both mp3 and mp4 is pointless.
            fixFlash_mp4 = event.jPlayer.flash.used && /m4a|m4v/.test(event.jPlayer.options.supplied);
        },
        timeupdate: function (event) {
            if (!ignore_timeupdate) {
                $(jpAncestor + " .jp-progress-slider").slider("value", event.jPlayer.status.currentPercentAbsolute);
            }
        },
        volumechange: function (event) {
            if (event.jPlayer.options.muted) {
                $(jpAncestor + " .jp-volume-slider").slider("value", 0);
            } else {
                $(jpAncestor + " .jp-volume-slider").slider("value", event.jPlayer.options.volume);
            }
        },
        loop: true, // Also for restarting the playlist after the last track
        swfPath: "../js",
        supplied: "mp3, m4a, oga",
        smoothPlayBar: true,
        keyEnabled: true
    });
    
    // A pointer to the jPlayer data object
    myPlayerData = myPlayer.data("jPlayer");
    
    console.log(myPlayerData);
    // Define hover states of the buttons
    $('.jp-gui ul li').hover(
        function () {
            $(this).addClass('ui-state-hover');
        },
        function () {
            $(this).removeClass('ui-state-hover');
        }
    );
    
    myControl = {
        progress: $(myPlayerData.options.cssSelectorAncestor + " .jp-progress-slider"),
        volume: $(myPlayerData.options.cssSelectorAncestor + " .jp-volume-slider")
    };
    
    console.log(myControl.progress);
    
    // Create the progress slider control
    myControl.progress.slider({
        animate: "fast",
        max: 100,
        range: "min",
        step: 0.1,
        value: 0,
        slide: function (event, ui) {
            var sp = myPlayerData.status.seekPercent;
            if (sp > 0) {
                // Apply a fix to mp4 formats when the Flash is used.
                if (fixFlash_mp4) {
                    ignore_timeupdate = true;
                    clearTimeout(fixFlash_mp4_id);
                    fixFlash_mp4_id = setTimeout(function () {
                        ignore_timeupdate = false;
                    }, 1000);
                }
                // Move the play-head to the value and factor in the seek percent.
                myPlayer.jPlayer("playHead", ui.value * (100 / sp));
            } else {
                // Create a timeout to reset this slider to zero.
                setTimeout(function () {
                    myControl.progress.slider("value", 0);
                }, 0);
            }
        }
    });

    // Create the volume slider control
    myControl.volume.slider({
        animate: "fast",
        max: 1,
        range: "min",
        step: 0.01,
        value: $.jPlayer.prototype.options.volume,
        slide: function (event, ui) {
            myPlayer.jPlayer("option", "muted", false);
            myPlayer.jPlayer("option", "volume", ui.value);
        }
    });
</script>

<div id="jp_container_1">
    <div id="jquery_jplayer_1" class="jp-jplayer"></div>
    <div class="jp-gui ui-widget ui-widget-content ui-corner-all">
        <ul>
            <li class="jp-play ui-state-default ui-corner-all"><a href="javascript:;" class="jp-play ui-icon ui-icon-play" tabindex="1"
                title="play">play</a>
            </li>
            <li class="jp-pause ui-state-default ui-corner-all"><a href="javascript:;" class="jp-pause ui-icon ui-icon-pause" tabindex="1"
                title="pause">pause</a>
            </li>
            <li class="jp-stop ui-state-default ui-corner-all"><a href="javascript:;" class="jp-stop ui-icon ui-icon-stop" tabindex="1"
                title="stop">stop</a>
            </li>
            <li class="jp-repeat ui-state-default ui-corner-all"><a href="javascript:;" class="jp-repeat ui-icon ui-icon-refresh" tabindex="1"
                title="repeat">repeat</a>
            </li>
            <li class="jp-repeat-off ui-state-default ui-state-active ui-corner-all"><a href="javascript:;" class="jp-repeat-off ui-icon ui-icon-refresh" tabindex="1"
                title="repeat off">repeat off</a>
            </li>
            <li class="jp-mute ui-state-default ui-corner-all"><a href="javascript:;" class="jp-mute ui-icon ui-icon-volume-off" tabindex="1"
                title="mute">mute</a>
            </li>
            <li class="jp-unmute ui-state-default ui-state-active ui-corner-all"><a href="javascript:;" class="jp-unmute ui-icon ui-icon-volume-off" tabindex="1"
                title="unmute">unmute</a>
            </li>
            <li class="jp-volume-max ui-state-default ui-corner-all"><a href="javascript:;" class="jp-volume-max ui-icon ui-icon-volume-on"
                tabindex="1" title="max volume">max volume</a>
            </li>
        </ul>
        <div class="jp-progress-slider"></div>
        <div class="jp-volume-slider"></div>
        <div class="jp-current-time"></div>
        <div class="jp-duration"></div>
        <div class="jp-clearboth"></div>
    </div>
    <div class="jp-playlist">
      <ul>
        <!-- The method Playlist.displayPlaylist() uses this unordered list -->
        <li></li>
      </ul>
    </div>

    <div class="jp-no-solution">
        <span>Update Required</span> To play the media you will need to either update your browser to a recent version or update your <a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.
    </div>
    
</div>